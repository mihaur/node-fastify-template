name: Node.JS CI

on: 
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
    
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12, 14]
        os: [ubuntu-latest]
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Use Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: super-lint Code Base
      uses: docker://github/super-linter:v2.1.0
      env:
        VALIDATE_ALL_CODEBASE: false
    - name: npm install
      run: |
        npm install
    - name: Validate dependency licenses
      run: |
        npm run license-checker
    - name: Start MongoDB in docker
      uses: DigiPie/mongo-action@v1.0.0
      with:
        image_version: latest
        port: 27017
    - name: Run tests
      run: |
        npm run coverage:ci
      env:
        CI: true
        MONGODB_URI: mongodb://localhost:27017/test-db # use mongoDB docker
    - name: Coveralls Parallel
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flag-name: run-${{ matrix.os }}-${{ matrix.node-version }}
        parallel: true

  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
